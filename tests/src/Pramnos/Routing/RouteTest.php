<?php

namespace Pramnos\Routing;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-08-19 at 15:27:13.
 */
class RouteTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Route
     */
    protected $route;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->route = new Route('/foo/bar', 'POST', function(){return 'ab';});
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->route = null;
    }

    /**
     * @covers \Pramnos\Routing\Route
     */
    public function testConstruct()
    {
        $route = new Route('/foo/bar', 'post', function(){});
        $this->assertInstanceOf('\Pramnos\Routing\Route', $route);
    }

    /**
     * @covers \Pramnos\Routing\Route
     */
    public function testMatch()
    {
        $this->assertTrue(
            $this->route->matches(
                \Pramnos\Http\Request::create('/foo/bar', 'post')
            )
        );
    }

    /**
     * @covers Pramnos\Routing\Route
     */
    public function testParameters()
    {
        $route = new Route(
            'foo/{name}/boom/{age?}/{location?}', 'GET', function(){}
        );
        $this->assertTrue(
            $route->matches(
                \Pramnos\Http\Request::create('foo/Yannis/boom/30', 'GET')
            )
        );
    }

    /**
     * @covers \Pramnos\Routing\Route
     */
    public function testNoMatch()
    {
        $this->assertFalse(
            $this->route->matches(
                \Pramnos\Http\Request::create('/foo/nofound', 'POST')
            )
        );
    }

    /**
     * @covers \Pramnos\Routing\Route
     */
    public function testNoMatchMethod()
    {
        $this->assertFalse(
            $this->route->matches(
                \Pramnos\Http\Request::create('/foo/bar', 'get')
            )
        );
    }

    /**
     * @covers Pramnos\Routing\Route
     */
    public function testExecution()
    {
        $route = new Route(
            'foo/{name}/boom/{age?}/{location?}', 'GET',
            function ($name, $age = 25, $location = 'GR') {
                return $name.$age.$location;
            }
        );
        $this->assertTrue(
            $route->matches(
                \Pramnos\Http\Request::create('foo/Yannis/boom/30', 'GET')
            )
        );
        $this->assertEquals(
            'Yannis30GR',
            $route->execute(
                \Pramnos\Http\Request::create('foo/Yannis/boom/30', 'GET')
            )
        );
    }

    /**
     * @covers Pramnos\Routing\Route
     */
    public function testNotCallableExecution()
    {
        $route = new Route(
            'foo/{name}/boom/{age?}/{location?}', 'GET',
            'test'
        );
        $this->assertTrue(
            $route->matches(
                \Pramnos\Http\Request::create('foo/Yannis/boom/30', 'GET')
            )
        );
        $this->assertNull(
            $route->execute(
                \Pramnos\Http\Request::create('foo/Yannis/boom/30', 'GET')
            )
        );
    }


}
